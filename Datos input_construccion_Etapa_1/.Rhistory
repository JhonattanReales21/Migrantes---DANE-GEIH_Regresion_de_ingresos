"OFICIO codigo de su oficio actual"=OFICIO, "OFICIO2 Codigo del ultimo oficio que realizó"=OFICIO2, "P1884 Cuantas horas a la semana puede trabajar?"=P1884, "P1807 -inactivo-, Salario minimo que aceptaria"=P1807,
"P7495 Recibio pagos por pensiones o arriendos?"=P7495, "P7505 Recibio dinero de otras persons o instituciones?"=P7505,"P1661S4 Recibio ayuda de entidades diferentes al gobierno?"=P1661S4,
"P1661S4A1 Cual entidad no gubernamental?"=P1661S4A1, "P1661S4A2 Monto recibido"=P1661S4A2, "P7360 Numero de personas en la empresa o negocio donde laboraba" = P7360, "P755 Donde vivia hace 5 años?"=P755,
"P753 Donde vivia hace 12 meses?" = P753, "P753S3 En que pais vivia hace 12 meses?"=P753S3, "Factor.de.expansion"=fex_c_2011.x, "Cuanto recibio por horas extras"=P6510S1)
#CREAMOS LA VARIABLE OCUPACION ( 3 niveles )
Dane_2019$ocupacion[!(is.na(Dane_2019$P6765))] = "No asalariado"
Dane_2019$ocupacion[ Dane_2019$P6440 %in% (1:2) & (is.na(Dane_2019$P6765))] = "Asalariado"
Dane_2019$ocupacion[!(Dane_2019$P6440 %in% (1:2))] = "Desempleado"
describe(Dane_2019$ocupacion) # Aprox el 50% de la población mayor de 12 años es: No asalariada
# 4. Trabajador por cuenta propia
# 5. Patrón o empleador
# 6. Trabajador familiar sin remuneracion
# 7. Trabajador para otros hogares o negocios sin remuneracion
describe(Dane_2019$P7350.En.su.ultimo.trabajo.era)
Dane_2019$ocupacion_antes[!(Dane_2019$P6440 %in% (1:2)) & (!(Dane_2019$P7350.En.su.ultimo.trabajo.era %in% (4:7)))] = "No asalariado"
Dane_2019$ocupacion_antes[!(Dane_2019$P6440 %in% (1:2)) & (!(Dane_2019$P7350.En.su.ultimo.trabajo.era %in% c(1,2,3,8,9)))] = "Asalariado"
Dane_2019$ocupacion_antes[is.na(Dane_2019$ocupacion_antes)] = "Ocupados"
describe(Dane_2019$ocupacion_antes)
1692/(1692+1033) # Aprox el 63% de los desempleados el mes anterior fueron: No asalariadados
# ha trabajado antes
Dane_2019$`P7310 Buscando trabajo por primera vez?`[Dane_2019$`P7310 Buscando trabajo por primera vez?` == 1] = 3
Dane_2019$`P7310 Buscando trabajo por primera vez?`[Dane_2019$`P7310 Buscando trabajo por primera vez?` == 2] = 1
Dane_2019$`P7310 Buscando trabajo por primera vez?`[Dane_2019$`P7310 Buscando trabajo por primera vez?` == 3] = 2
Dane_2019 <- dplyr::rename(Dane_2019, "P7310.Ha.trabajado.antes"=`P7310 Buscando trabajo por primera vez?`)
for (i in 1:nrow(Dane_2019)) {
if (!(is.na(Dane_2019$`P6800 Cuantas horas a la semana trabaja?`[i])) == T) {
Dane_2019$Empleo.antes[i] <- Dane_2019$`P7020 Tuvo otro trabajo antes del actual?`[i]
}
if (!(is.na(Dane_2019$`P7250 Semanas que lleva -Desocupado- buscando trabajo, o que estuvo buscando`[i])) == T) {
Dane_2019$Empleo.antes[i] <- Dane_2019$P7310.Ha.trabajado.antes[i]
}
}
#Horas que puede trabajar en la semana o las que trabaja
Dane_2019$Horas.disponibles= 0
for (i in 1:nrow(Dane_2019)) {
if (!(is.na(Dane_2019$`P7260 Cuantas horas a la semana podria trabajar?`[i])) == T) {
Dane_2019$Horas.disponibles[i] <- Dane_2019$`P7260 Cuantas horas a la semana podria trabajar?`[i]
}
if (!(is.na(Dane_2019$`P6800 Cuantas horas a la semana trabaja?`[i])) == T) {
Dane_2019$Horas.disponibles[i] <- Dane_2019$`P6800 Cuantas horas a la semana trabaja?`[i]
}
if (!(is.na(Dane_2019$`P7100 Horas adicionales que puede trabajar en la semana`[i])) == T){
Dane_2019$Horas.disponibles[i] <- Dane_2019$Horas.disponibles[i] + Dane_2019$`P7100 Horas adicionales que puede trabajar en la semana`[i]
}
}
#Rama de la empresa donde trabaja o donde trabaj?
Dane_2019$Rama.actividad= 0
for (i in 1:nrow(Dane_2019)) {
if (!(is.na(Dane_2019$`Rama de la actividad que realiza la ultima empresa donde laboró (2 digitos)?`[i])) == T) {
Dane_2019$Rama.actividad[i] <- Dane_2019$`Rama de la actividad que realiza la ultima empresa donde laboró (2 digitos)?`[i]
}
if (!(is.na(Dane_2019$`Rama de actividad de la empresa donde labora(2digitos)`[i])) == T) {
Dane_2019$Rama.actividad[i] <- Dane_2019$`Rama de actividad de la empresa donde labora(2digitos)`[i]
}
}
#Variable tiempo en Colombia
Dane_2019$tiempo.en.colombia= 0
for (i in 1:nrow(Dane_2019)) {
if(!(is.na(Dane_2019$`P753S3 En que pais vivia hace 12 meses?`[i])) == T){
Dane_2019$tiempo.en.colombia[i] <- 1
}
if (Dane_2019$`P753 Donde vivia hace 12 meses?`[i] %in% (2:3)) {
Dane_2019$tiempo.en.colombia[i] <- 2
}
if(!(is.na(Dane_2019$P756S3[i])) == T & Dane_2019$`P755 Donde vivia hace 5 años?`[i] %in% (2:3) & Dane_2019$`P753 Donde vivia hace 12 meses?`[i] %in% (2:3)) {
Dane_2019$tiempo.en.colombia[i] <- 3
}
if (Dane_2019$tiempo.en.colombia[i]==0) {
Dane_2019$tiempo.en.colombia[i] <- 1
}
}
# Indicativo de año
Dane_2019$anio <- 2019
##  !!!! SE DECIDE SEPARAR EL PROCESO PARA CADA AÑO PORQUE EXISTEN !!!! ##
##  !!!! VARIABLES DIFERENTES ENTRE UN AÑO Y EL OTRO. ENTONCES PARA EVITAR ERRORES ##  !!!!
# PARA 2020
#Se leen los datos
Dane_2020 <- read.csv("Dane2020_completa_(Hasta febrero).csv", header = T, sep = ",", dec = ".")
#SOLO PERSONAS MAYORES DE 12 AÑOS
Dane_2020 <- filter(Dane_2020, P6040 >=12)
Dane_2020 <- filter(Dane_2020, !(is.na(P6040)))
sum(is.na(Dane_2020$P6040))
#filtrar TODOS LOS INACTIVOS
Dane_2020 <- filter(Dane_2020, !(!(is.na(P7430) )))
#nos quedamos con 18,161 personas.
###### REALIZAR LOS CAMBIOS PERTINENTES A LA BASE DE DATOS (escoger variables generales y renombrar) ####
Dane_2020 <- mutate(Dane_2020, "Familia" = paste(Dane_2020$ï..DIRECTORIO, "-", Dane_2020$SECUENCIA_P))
Dane_2020 <- dplyr::select(Dane_2020, -1)
Dane_2020 <- dplyr::select(Dane_2020, 1, Familia, everything())
Dane_2020 <- dplyr::select(Dane_2020, id_personal, Familia, DPTO.x, AREA.x, MES.x, P6020, P6040, P6050, P6070, P6090, P6110, P6160, P6170, P6210, P6220, ESC,
P6240, P6280, P6290, P6310, P6260, P6320, P6340, P6350, P6430, P6440, P6450, P6460, P6424S3, P6426, P6480, P9440, P6500,
P6510, P6510S1, P6510S2, P6630S1, P6630S1A1, P6765, P6772, P6775, P6750, P6780, P1800, P1800S1, P1802, P1879, P6800, P6870,
P6880, P6920, P9450, P7020, P760, P7026, P7028, P7100,P7120, P7240,
OFICIO, INGLABO, P7250, P7280, P7310, P7350, P7360 ,P7260, OFICIO2, P7430, P7458,P1884, P1807, P7495, P7505,
P1661S4, P1661S4A1, P1661S4A2,P753S3, P753, P756S3,P755, fex_c_2011.x, P6585S1A1, P6585S1A2, P6585S2A1, P6585S2A2,
P6585S3A1, P6585S3A2, P6585S4A1, P6585S4A2, P6545S1, P6545S2, P6580S1, P6580S2, P7070, P7422S1, P7510S3A1, RAMA2D_R4, RAMA2D_D_R4)
Dane_2020 <- dplyr::rename(Dane_2020, Identificacion=id_personal, Departamento=DPTO.x, Area=AREA.x, Mes=MES.x, "Anios.de.escolaridad" = ESC, "Genero"=P6020,
Edad=P6040, Parentesco=P6050, "Estado.civil" = P6070, "P6090 Cuenta con seguridad social en salud" = P6090)
Dane_2020 <- Dane_2020%>%dplyr::rename("P6110 Quien paga por la salud?" = P6110,  "P6160 Sabe leer y escribir?" = P6160, "P6170 Asiste a una entidad educativa?" =P6170,
"Nivel.educativo.alcanzado" = P6210, "P6220 Titulo o diploma de mayor nivel" = P6220, "P6290 Que ha hecho para conseguir trabajo" = P6290, "P6280 Ha intentado conseguir trabajo en este mes?" = P6280,
"P6240 Que fue lo que mas hizo la semana pasada?" = P6240, "P6310 Por que no hizo diligencias para trabajar?" = P6310, "P6260 Aunque no trabajó la semana pasada, tuvo ingresos?" = P6260,
"P6320 El ultimo año ha trabajado por lo menos 2 semanas?" = P6320, "P6340 En el ultimo año ha buscado trabajado?" = P6340, "P6350 Cuantos meses lleva sin buscar trabajo?" = P6350, "P6440 Como -Asalariado-, cuenta con algún tipo de contrato?" = P6440, "P6500 Cuanto ganó el ultimo mes?" =P6500,
"P6765 Que forma de trabajo -independiente- realizó?" =P6765, "P6750 Ganancia neta por honorarios o negocio" =P6750, "P1800 Tiene empleado o personas que lo ayuden?" =P1800, "P6800 Cuantas horas a la semana trabaja?" = P6800,
"P6870 Numero de personas en la empresa o negocio donde labora" = P6870, "P6880 Donde realiza su trabajo?" =P6880,
"P6920 Cotiza a pension?" =P6920,
"P7020 Tuvo otro trabajo antes del actual?" =P7020, "P760 Meses desempleado antes de conseguir trabajo?" =P760, "P7026 Tiempo en empleo anterior (meses)"=P7026,"P7028 En su empleo anterior usted era?"=P7028,
"P7100 Horas adicionales que puede trabajar en la semana"=P7100,
"P7120 Disponible para trabajar mas horas a la semana?"=P7120,"P7240 Si no tiene empleo de donde obtendria los recursos?"=P7240,
"P6430 En este trabajo usted es:"=P6430, "Rama de actividad de la empresa donde labora(2digitos)"=RAMA2D_R4, "Ingresos laborales"=INGLABO, "P7250 Semanas que lleva -Desocupado- buscando trabajo, o que estuvo buscando"=P7250,
"P7310 Buscando trabajo por primera vez?"=P7310, "P7350.En.su.ultimo.trabajo.era"=P7350, "P7260 Cuantas horas a la semana podria trabajar?"=P7260,"Rama de la actividad que realiza la ultima empresa donde laboró (2 digitos)?"=RAMA2D_D_R4, "P7430 Es -Inactivo- pero, ha trabajado alguna vez?"=P7430,
"OFICIO codigo de su oficio actual"=OFICIO, "OFICIO2 Codigo del ultimo oficio que realizó"=OFICIO2, "P1884 Cuantas horas a la semana puede trabajar?"=P1884, "P1807 -inactivo-, Salario minimo que aceptaria"=P1807,
"P7495 Recibio pagos por pensiones o arriendos?"=P7495, "P7505 Recibio dinero de otras persons o instituciones?"=P7505,"P1661S4 Recibio ayuda de entidades diferentes al gobierno?"=P1661S4,
"P1661S4A1 Cual entidad no gubernamental?"=P1661S4A1, "P1661S4A2 Monto recibido"=P1661S4A2, "P7360 Numero de personas en la empresa o negocio donde laboraba" = P7360, "P755 Donde vivia hace 5 años?"=P755,
"P753 Donde vivia hace 12 meses?" = P753, "P753S3 En que pais vivia hace 12 meses?"=P753S3, "Factor.de.expansion"=fex_c_2011.x, "Cuanto recibio por horas extras"=P6510S1)
#CREAMOS LA VARIABLE OCUPACION ( 3 niveles )
Dane_2020$ocupacion[!(is.na(Dane_2020$P6765))] = "No asalariado"
Dane_2020$ocupacion[ Dane_2020$P6440 %in% (1:2) & (is.na(Dane_2020$P6765))] = "Asalariado"
Dane_2020$ocupacion[!(Dane_2020$P6440 %in% (1:2))] = "Desempleado"
describe(Dane_2020$ocupacion) # Aprox el 48% de la población mayor de 12 años es: No asalariada
#CREAMOS LA VARIABLE OCUPACION ANTES - especial para los desempleados ( 2 niveles )
# Para los desempleados:
Dane_2020$ocupacion_antes[!(Dane_2020$P6440 %in% (1:2)) & (!(Dane_2020$P7350.En.su.ultimo.trabajo.era %in% (4:7)))] = "No asalariado"
Dane_2020$ocupacion_antes[!(Dane_2020$P6440 %in% (1:2)) & (!(Dane_2020$P7350.En.su.ultimo.trabajo.era %in% c(1,2,3,8,9)))] = "Asalariado"
Dane_2020$ocupacion_antes[is.na(Dane_2020$ocupacion_antes)] = "Ocupados"
describe(Dane_2020$ocupacion_antes)
282/(282+184) # Aprox el 60% de los desempleados el mes anterior fueron: No asalariadados
######  Construir variables nuevas, combinando preguntas de cada modulo  ####
# ha trabajado antes
Dane_2020$`P7310 Buscando trabajo por primera vez?`[Dane_2020$`P7310 Buscando trabajo por primera vez?` == 1] = 3
Dane_2020$`P7310 Buscando trabajo por primera vez?`[Dane_2020$`P7310 Buscando trabajo por primera vez?` == 2] = 1
Dane_2020$`P7310 Buscando trabajo por primera vez?`[Dane_2020$`P7310 Buscando trabajo por primera vez?` == 3] = 2
Dane_2020 <- dplyr::rename(Dane_2020, "P7310.Ha.trabajado.antes"=`P7310 Buscando trabajo por primera vez?`)
for (i in 1:nrow(Dane_2020)) {
if (!(is.na(Dane_2020$`P6800 Cuantas horas a la semana trabaja?`[i])) == T) {
Dane_2020$Empleo.antes[i] <- Dane_2020$`P7020 Tuvo otro trabajo antes del actual?`[i]
}
if (!(is.na(Dane_2020$`P7250 Semanas que lleva -Desocupado- buscando trabajo, o que estuvo buscando`[i])) == T) {
Dane_2020$Empleo.antes[i] <- Dane_2020$P7310.Ha.trabajado.antes[i]
}
}
#Horas que puede trabajar en la semana o las que trabaja
Dane_2020$Horas.disponibles= 0
for (i in 1:nrow(Dane_2020)) {
if (!(is.na(Dane_2020$`P7260 Cuantas horas a la semana podria trabajar?`[i])) == T) {
Dane_2020$Horas.disponibles[i] <- Dane_2020$`P7260 Cuantas horas a la semana podria trabajar?`[i]
}
if (!(is.na(Dane_2020$`P6800 Cuantas horas a la semana trabaja?`[i])) == T) {
Dane_2020$Horas.disponibles[i] <- Dane_2020$`P6800 Cuantas horas a la semana trabaja?`[i]
}
if (!(is.na(Dane_2020$`P7100 Horas adicionales que puede trabajar en la semana`[i])) == T){
Dane_2020$Horas.disponibles[i] <- Dane_2020$Horas.disponibles[i] + Dane_2020$`P7100 Horas adicionales que puede trabajar en la semana`[i]
}
}
#Rama de la empresa donde trabaja o donde trabaj?
Dane_2020$Rama.actividad= 0
for (i in 1:nrow(Dane_2020)) {
if (!(is.na(Dane_2020$`Rama de la actividad que realiza la ultima empresa donde laboró (2 digitos)?`[i])) == T) {
Dane_2020$Rama.actividad[i] <- Dane_2020$`Rama de la actividad que realiza la ultima empresa donde laboró (2 digitos)?`[i]
}
if (!(is.na(Dane_2020$`Rama de actividad de la empresa donde labora(2digitos)`[i])) == T) {
Dane_2020$Rama.actividad[i] <- Dane_2020$`Rama de actividad de la empresa donde labora(2digitos)`[i]
}
}
#Variable tiempo en Colombia
Dane_2020$tiempo.en.colombia= 0
for (i in 1:nrow(Dane_2020)) {
if(!(is.na(Dane_2020$`P753S3 En que pais vivia hace 12 meses?`[i])) == T){
Dane_2020$tiempo.en.colombia[i] <- 1
}
if (Dane_2020$`P753 Donde vivia hace 12 meses?`[i] %in% (2:3)) {
Dane_2020$tiempo.en.colombia[i] <- 2
}
if(!(is.na(Dane_2020$P756S3[i])) == T & Dane_2020$`P755 Donde vivia hace 5 años?`[i] %in% (2:3) & Dane_2020$`P753 Donde vivia hace 12 meses?`[i] %in% (2:3)) {
Dane_2020$tiempo.en.colombia[i] <- 3
}
if (Dane_2020$tiempo.en.colombia[i]==0) {
Dane_2020$tiempo.en.colombia[i] <- 1
}
}
# Indicativo de año
Dane_2020$anio <- 2020
Dane_reducida_total <- rbind(Dane_2019, Dane_2020)
View(Dane_reducida_total)
setwd("C:/Users/USER/Dropbox/ASPECTOS MAESTRIA/ENTREGABLE 3/Modificación base de datos para regresion/Migrantes---DANE-GEIH_Regresion_de_ingresos/Datos output construccion_Etapa_1")
Dane <- read.csv("Dane_Reducida_Total.csv", header = T, sep = ",", dec = ".")
# Observamos la frecuencia de ocupación en la base de datos
describe(Dane$ocupacion)
# Miramos el estado de las variables
df_status(Dane)
# Miramos el estado de las variables
df_status(Dane)
# Filtramos y observamos cuantos no reportaron ingresos
prueba <- Dane %>% filter(ocupacion=="Asalariado")
sum(is.na(prueba$P6500.Cuanto.ganó.el.ultimo.mes.))
# Observamos los valores outliers del ingreso sin subsidios
describe(prueba$P6500.Cuanto.ganó.el.ultimo.mes.)
prueba %>% ggplot(aes(x=ocupacion, y=P6500.Cuanto.ganó.el.ultimo.mes.)) + geom_boxplot()+
ggtitle("Ingresos en el ultimo mes para Asalariados")+
xlab("")+ylab("Monto $") + theme_bw()
# Observamos los valores outliers de los ingresos de subsidios
describe(prueba$P6585S1A1)
prueba %>% ggplot(aes(x=ocupacion, y=P6585S1A1)) + geom_boxplot()+
ggtitle("Subsidio de alimentacion")+
xlab("")+ylab("Monto $") + theme_bw()
describe(prueba$P6585S2A1)
prueba %>% ggplot(aes(x=ocupacion, y=P6585S2A1)) + geom_boxplot()+
ggtitle("Subsidio de transporte")+
xlab("")+ylab("Monto $") + theme_bw()
describe(prueba$P6585S3A1)
prueba %>% ggplot(aes(x=ocupacion, y=P6585S3A1)) + geom_boxplot()+
ggtitle("Subsidio familiar")+
xlab("")+ylab("Monto $") + theme_bw()
describe(prueba$P6585S4A1) # Subsidio educativo
describe(prueba$P6545S1) #Ingreso por primas (tecnica, antiguedad)
describe(prueba$P6580S1)
prueba %>% ggplot(aes(x=ocupacion, y=P6580S1)) + geom_boxplot()+
ggtitle("Ingresos por algún tipo de bonificación mensual")+
xlab("")+ylab("Monto $") + theme_bw()
# Filtramos y observamos cuantos no reportaron ingresos
prueba2 <- Dane %>% filter(ocupacion=="No asalariado")
sum(is.na(prueba2$P6750.Ganancia.neta.por.honorarios.o.negocio))
# !!!!!!! 207 No asalariados no reportaron ingresos... se eliminan (?)...Se hacen cero (?)
describe(prueba2$P6750.Ganancia.neta.por.honorarios.o.negocio)
# Observamos los valores outliers del ingreso
prueba2 %>% ggplot(aes(x=ocupacion, y=P6750.Ganancia.neta.por.honorarios.o.negocio)) + geom_boxplot()+
ggtitle("Ingresos en el ultimo mes para No asalariados")+
xlab("")+ylab("Monto $") + theme_bw()
# Filtramos y observamos cuantos reportaron ingresos
prueba3 <- Dane %>% filter(ocupacion=="Desempleado")
describe(prueba3$P7422S1)
# Observamos los valores outliers del ingreso
prueba3 %>% ggplot(aes(x=ocupacion, y=P7422S1)) + geom_boxplot() + ggtitle("Ingresos en el ultimo mes para desempleados")+
xlab("")+ylab("Monto $") + theme_bw()
describe(Dane$P7070)
describe(Dane$P7510S3A1)
ggplot(Dane, aes(x=ocupacion, y=P7070, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos por actividades secundarias")+xlab("")+ ylab("Monto $") + theme_bw()
ggplot(Dane, aes(x=ocupacion, y=P7510S3A1, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos por entidades nacionales o internacionales")+
xlab("")+ ylab("Monto $") + theme_bw()
Dane_paramodelos <- dplyr::select(Dane, Identificacion,Familia, Departamento, Genero, Edad, Parentesco, Estado.civil, Nivel.educativo.alcanzado,
Empleo.antes, Rama.actividad,tiempo.en.colombia,Horas.disponibles, P6500.Cuanto.ganó.el.ultimo.mes.,
Cuanto.recibio.por.horas.extras, P6510S2, P6585S1A1, P6585S1A2, P6585S2A1, P6585S2A2,
P6585S3A1, P6585S3A2, P6585S4A1, P6585S4A2, P6545S1, P6545S2, P6580S1, P6580S2,P6750.Ganancia.neta.por.honorarios.o.negocio,
P7070, P7422S1, P7510S3A1, ocupacion, ocupacion_antes, Factor.de.expansion, anio)
# Filtramos aquellos con rama de actividad 0, es decir, los que nunca han trabajado antes
Dane_paramodelos <- Dane_paramodelos %>% filter(!(Rama.actividad == "0"))
glimpse(Dane_paramodelos)
Dane_paramodelos$Departamento <-  as.factor(Dane_paramodelos$Departamento)
Dane_paramodelos$Genero <- as.factor(Dane_paramodelos$Genero)
Dane_paramodelos$Parentesco <- as.factor(Dane_paramodelos$Parentesco)
Dane_paramodelos$Estado.civil <- as.factor(Dane_paramodelos$Estado.civil)
Dane_paramodelos$Nivel.educativo.alcanzado<- as.factor(Dane_paramodelos$Nivel.educativo.alcanzado)
Dane_paramodelos$Empleo.antes <- as.factor(Dane_paramodelos$Empleo.antes)
Dane_paramodelos$Rama.actividad <- as.factor(Dane_paramodelos$Rama.actividad)
Dane_paramodelos$tiempo.en.colombia <- as.factor(Dane_paramodelos$tiempo.en.colombia)
Dane_paramodelos$Parentesco <- fct_collapse(Dane_paramodelos$Parentesco, "Jefe de hogar"="1", "Nucleo familiar"=c("2","3"), "Otros parientes"=c("4","5"), "Otros No parientes"=c("6","7","8","9"))
Dane_paramodelos$Genero <- fct_collapse(Dane_paramodelos$Genero, "Masculino"="1", "Femenino"=c("2"))
Dane_paramodelos$Empleo.antes <- fct_collapse(Dane_paramodelos$Empleo.antes, "Si"="1", "No"=c("2"))
Dane_paramodelos$tiempo.en.colombia <- fct_collapse(Dane_paramodelos$tiempo.en.colombia, "Menos de 1 año"="1", "Entre 1 y 5 años"=c("2"), "Mas de 5 años" ="3")
Dane_paramodelos$Estado.civil <- fct_collapse(Dane_paramodelos$Estado.civil, "Soltero"="6", "Casado y/o union libre"=c("1","2","3"), "Separado y/o viudo"=c("4","5"))
Dane_paramodelos$Nivel.educativo.alcanzado <- fct_collapse(Dane_paramodelos$Nivel.educativo.alcanzado, "Ninguno/No_sabe"=c("1","9"), "Preescolar"="2","Básica primaria"="3","Básica secundaria"="4","Media (10o -13o)"="5","Superior o universitaria"="6",)
D2019 <-Dane_paramodelos %>% filter(anio==2019)
D2020 <-Dane_paramodelos %>% filter(anio==2020)
D2019$Rama.actividad <-fct_collapse(D2019$Rama.actividad, "Agricultura, ganadería y caza"= "1" , "Silvicultura y extracción de madera "= "2",
"Actividades de servicios relacionas con la pesca"="5", "Explotación de minas y carbón"=c("10","11","14"),"Elaboración de productos alimenticios"="15","Fabricación de productos de tabaco"="16",
"Fabricación de productos textiles"="17", "Fabricación de prendas de vestir"="18", "Curtido y preparado de cueros, trabajar con cuero"="19",
"Fabricación de productos de madera"="20","Fabricación de producto de papel y cartón"="21", "Actividades de edición/reproducción de grabaciones"="22",
"Fabricación de sustancias y productos químicos"="24", "Fabricación de productos de caucho y de plástico"="25", "Fabricación de productos minerales no metálicos"="26",
"Fabricación de productos metalúrgicos básicos"="27", "Fabricación de productos de metal"="28", "Fabricación de maquinaria y equipo ncp"="29",
"Fabricación de maquinaria y aparatos eléctricos"="31", "Fabricación de equipo  de radio y televisión"="32", "Fabricación de instrumentos médicos // relojes"="33",
"Fabricación de vehículos automotores"="34", "Fabricación de otros tipos de equipo de transporte"="35", "Fabricación de muebles / industrias manufactureras"="36",
"Reciclaje de metalicos y no metalicos"="37", "Suministro de electricidad, gas y vapor"="40", "Captación, depuración y distribución de agua"="41",
"Construcción"="45", "Comercio al por mayor y al por menor"=c("50", "51","52"),"Hoteles, restaurantes, bares y similares"="55", "Transporte por vía terrestre; transporte por tuberías"="60", "Transporte por vía acuática"="61",
"Transporte por vía aérea"="62", "Actividades complementarias/auxiliares al transporte"="63", "Correo y telecomunicaciones"="64", "Intermediación financiera"="65",
"Financiaci?n de planes de seguros y pensiones"="66", "Actividades auxiliares de la intermediación financiera"="67", "Actividades inmobiliarias"="70",
"Alquiler de maquinaria y equipo sin operarios"="71", "Informática y actividades conexas"="72", "Otras actividades empresariales"="74","Administración pública y defensa"="75",
"Educación"="80", "Servicios sociales y de salud"="85", "Saneamiento y eliminación de desperdicios"="90", "Actividades de asociaciones ncp"="91",
"Actividades culturales y deportivas"="92", "Otras actividades de servicios"="93", "Hogares privados con servicio doméstico"="95", "Organizaciones extraterritoriales"="99")
D2019$Rama.actividad <- as.factor(D2019$Rama.actividad)
D2019$Rama.actividad <- droplevels(D2019$Rama.actividad)
D2020$Rama.actividad <-fct_collapse(D2020$Rama.actividad, "Agricultura, ganadería y caza"= "1" , "Explotación de minas y carbón"= c("5","8","9"),
"Elaboración de productos alimenticios"=c("10","11"),"Fabricación de productos textiles"="13", "Fabricación de prendas de vestir"="14", "Curtido y preparado de cueros, trabajar con cuero"="15",
"Fabricación de productos de madera"="16","Fabricación de producto de papel y cartón"="17", "Actividades de edición/reproducción de grabaciones"="18",
"Fabricación de sustancias y productos químicos"=c("19", "20","21"), "Fabricación de productos de caucho y de plástico"="22", "Fabricación de productos minerales no metálicos"="23",
"Fabricación de productos metalúrgicos básicos"="24", "Fabricación de productos de metal"="25",
"Fabricación de maquinaria y aparatos eléctricos"="27", "Otras industrias manufactureras"="32", "Instalación, mantenimiento y reparación de maquinaria"="33",
"Fabricación de vehículos automotores"="29", "Fabricación de otros tipos de equipo de transporte"="30", "Fabricación de muebles / industrias manufactureras"="31",
"Suministro de electricidad, gas y vapor"="35", "Captación, depuración y distribución de agua"="36", "Recolección, tratamiento y disposición de desechos"="38",
"Construcción"=c("41","42","43"), "Comercio al por mayor y al por menor"=c("45", "46","47"),"Hoteles, restaurantes, bares y similares"=c("55", "56"), "Transporte por vía terrestre; transporte por tuberías"="49",
"Actividades complementarias/auxiliares al transporte"="52", "Correo y telecomunicaciones"=c("53","59","61"), "Informática y actividades conexas"=c("62","63"),"Intermediación financiera"="64",
"Financiación de planes de seguros y pensiones"="65", "Actividades auxiliares de la intermediación financiera"="66", "Actividades inmobiliarias"="68", "Actividades profesionales, cientificas y tecnicas" =c("69","71", "73", "74"),
"Otras actividades empresariales"=c("77","78","79","80","81","82"),"Administración pública y defensa"="84",
"Educación"="85", "Servicios sociales y de salud"=c("86","87","88"),
"Actividades culturales y deportivas"=c("90","91","92","93"), "Otras actividades de servicios"=c("94","95","96"), "Hogares privados con servicio doméstico"="97")
D2020$Rama.actividad <- as.factor(D2020$Rama.actividad)
D2020$Rama.actividad <- droplevels(D2020$Rama.actividad)
# Unimos
Dane_paramodelos2 <- rbind(D2019, D2020)
levels(Dane_paramodelos2$Rama.actividad)
freq(Dane_paramodelos2$Rama.actividad)   # Grafica sobre frecuencia de ramas de actividad
# Categorizamos la variable edad y la variable horas disponibles
Dane_paramodelos2$Edad <-  cut(Dane_paramodelos2$Edad,  breaks = c(11,14,18, 26, 59, 100))
Dane_paramodelos2$Horas.disponibles <-  cut(Dane_paramodelos2$Horas.disponibles,  breaks = c(0,39, 48, 130))
# En las variables de ingresos los NA los convertimos en cero
Dane_paramodelos2$P6500.Cuanto.ganó.el.ultimo.mes.[is.na(Dane_paramodelos2$P6500.Cuanto.ganó.el.ultimo.mes.)]=0
Dane_paramodelos2$Cuanto.recibio.por.horas.extras[is.na(Dane_paramodelos2$Cuanto.recibio.por.horas.extras)]=0
Dane_paramodelos2$P6585S1A1[is.na(Dane_paramodelos2$P6585S1A1)]=0
Dane_paramodelos2$P6585S2A1[is.na(Dane_paramodelos2$P6585S2A1)]=0
Dane_paramodelos2$P6585S3A1[is.na(Dane_paramodelos2$P6585S3A1)]=0
Dane_paramodelos2$P6585S4A1[is.na(Dane_paramodelos2$P6585S4A1)]=0
Dane_paramodelos2$P6545S1[is.na(Dane_paramodelos2$P6545S1)]=0
Dane_paramodelos2$P6580S1[is.na(Dane_paramodelos2$P6580S1)]=0
Dane_paramodelos2$P6750.Ganancia.neta.por.honorarios.o.negocio[is.na(Dane_paramodelos2$P6750.Ganancia.neta.por.honorarios.o.negocio)]=0
Dane_paramodelos2$P7070[is.na(Dane_paramodelos2$P7070)]=0
Dane_paramodelos2$P7422S1[is.na(Dane_paramodelos2$P7422S1)]=0
Dane_paramodelos2$P7510S3A1[is.na(Dane_paramodelos2$P7510S3A1)]=0
# En las variables de tipo Si o No los NA los convertimos en "No responde"
Dane_paramodelos2$P6510S2[is.na(Dane_paramodelos2$P6510S2)]="No responde"
Dane_paramodelos2$P6585S1A2[is.na(Dane_paramodelos2$P6585S1A2)]="No responde"
Dane_paramodelos2$P6585S2A2[is.na(Dane_paramodelos2$P6585S2A2)]="No responde"
Dane_paramodelos2$P6585S3A2[is.na(Dane_paramodelos2$P6585S3A2)]="No responde"
Dane_paramodelos2$P6585S4A2[is.na(Dane_paramodelos2$P6585S4A2)]="No responde"
Dane_paramodelos2$P6545S2[is.na(Dane_paramodelos2$P6545S2)]="No responde"
Dane_paramodelos2$P6580S2[is.na(Dane_paramodelos2$P6580S2)]="No responde"
Dane_paramodelos2$Cuanto.recibio.por.horas.extras <- as.integer(Dane_paramodelos2$Cuanto.recibio.por.horas.extras)
glimpse(Dane_paramodelos2)
Dane_paramodelos3 <- Dane_paramodelos2
#inicilizamos a variable
Dane_paramodelos3$Ingresos_total=Dane_paramodelos3$P6500.Cuanto.ganó.el.ultimo.mes.
while (i <= nrow(Dane_paramodelos3)) {
if (Dane_paramodelos3$P6510S2[i] == "2") { # Horas extras
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$Cuanto.recibio.por.horas.extras[i]
}
if (Dane_paramodelos3$P6585S1A2[i] == "2") { # Subsidio de alimentación
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S1A1[i]
}
if (Dane_paramodelos3$P6585S2A2[i] == "2") { # Subsidio de transporte
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S2A1[i]
}
if (Dane_paramodelos3$P6585S3A2[i] == "2") { # Subsidio familiar
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S3A1[i]
}
if (Dane_paramodelos3$P6585S4A2[i] == "2") { # Subsidio educativo
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S4A1[i]
}
if (Dane_paramodelos3$P6545S2[i] == "2") { # Ingresos por primas (tecnica, antiguedad)
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6545S1[i]
}
if (Dane_paramodelos3$P6580S2[i] == "2") { # Por algún tipo de bonificación mensual
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6580S1[i]
}
i <- i+1
}
i <- 1
while (i <= nrow(Dane_paramodelos3)) {
if (Dane_paramodelos3$P6510S2[i] == "2") { # Horas extras
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$Cuanto.recibio.por.horas.extras[i]
}
if (Dane_paramodelos3$P6585S1A2[i] == "2") { # Subsidio de alimentación
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S1A1[i]
}
if (Dane_paramodelos3$P6585S2A2[i] == "2") { # Subsidio de transporte
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S2A1[i]
}
if (Dane_paramodelos3$P6585S3A2[i] == "2") { # Subsidio familiar
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S3A1[i]
}
if (Dane_paramodelos3$P6585S4A2[i] == "2") { # Subsidio educativo
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6585S4A1[i]
}
if (Dane_paramodelos3$P6545S2[i] == "2") { # Ingresos por primas (tecnica, antiguedad)
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6545S1[i]
}
if (Dane_paramodelos3$P6580S2[i] == "2") { # Por algún tipo de bonificación mensual
Dane_paramodelos3$Ingresos_total[i] <- Dane_paramodelos3$Ingresos_total[i] + Dane_paramodelos3$P6580S1[i]
}
i <- i+1
}
describe(Dane_paramodelos3$Ingresos_total)
ggplot(Dane_paramodelos3, aes(x=ocupacion, y=Ingresos_total, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos totales por sector de población")+
xlab("")+ ylab("Monto $") + theme_bw()
# A manera de ejemplo, nos quedamos solo con los que ganen menos de 3 millones
Dane_paramodelos3 %>% filter(Ingresos_total<=3000000) %>% ggplot(aes(x=ocupacion, y=Ingresos_total, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos totales por sector de población")+
xlab("")+ ylab("Monto $") + theme_bw()
# Todos los que no son asalariados tienen un cero en la variable p6750, por lo tanto no afecta sumar los valores.
Dane_paramodelos3$Ingresos_total <- Dane_paramodelos3$Ingresos_total + Dane_paramodelos3$P6750.Ganancia.neta.por.honorarios.o.negocio
# Todos los que no son asalariados tienen un cero en la variable p6750, por lo tanto no afecta sumar los valores.
Dane_paramodelos3$Ingresos_total <- Dane_paramodelos3$Ingresos_total + Dane_paramodelos3$P7422S1
# Ingresos por trabajos secundarios y por ayudas de entidades nacionales o internacionales
Dane_paramodelos3$Ingresos_total <- Dane_paramodelos3$Ingresos_total + Dane_paramodelos3$P7070
Dane_paramodelos3$Ingresos_total <- Dane_paramodelos3$Ingresos_total + Dane_paramodelos3$P7510S3A1
Dane_paramodelos3 <- filter(Dane_paramodelos3, !(Ingresos_total%in% 1:200)) #Eliminamos 30 personas que no saben sus ingresos
# A manera de ejemplo, nos quedamos solo con los que ganen menos de 3 millones
Dane_paramodelos3 %>% filter(Ingresos_total<=3000000) %>% ggplot(aes(x=ocupacion, y=Ingresos_total, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos totales por sector de población")+
xlab("")+ ylab("Monto $") + theme_bw()
21098 - Dane_paramodelos3 %>% filter(Ingresos_total<=3000000) %>% nrow()  #Solo 123 ganan mas de 3 millones
Dane_paramodelos_final <-  Dane_paramodelos3
Dane_paramodelos_final$ocupacion <- if_else(Dane_paramodelos3$ocupacion=="Desempleado", Dane_paramodelos3$ocupacion_antes, Dane_paramodelos3$ocupacion )
# Seleccionamos las variables de interes
Dane_paramodelos_final  <- Dane_paramodelos_final %>% select(1:12, 32, 34, 35, 36)
describe(Dane_paramodelos_final$Ingresos_total)
setwd("C:/Users/USER/Dropbox/ASPECTOS MAESTRIA/ENTREGABLE 3/Modificación base de datos para regresion/Migrantes---DANE-GEIH_Regresion_de_ingresos/Datos input_construccion_Etapa_1")
#Se leen los datos
Dane_2019 <- read.csv("Dane2019-completa.csv", header = T, sep = ",", dec = ".")
#SOLO PERSONAS MAYORES DE 12 AÑOS
Dane_2019 <- filter(Dane_2019, P6040 >=12)
Dane_2019 <- filter(Dane_2019, !(is.na(P6040)))
sum(is.na(Dane_2019$P6040))
#filtrar TODOS LOS INACTIVOS
Dane_2019 <- filter(Dane_2019, !(!(is.na(P7430) )))
###### REALIZAR LOS CAMBIOS PERTINENTES A LA BASE DE DATOS (escoger variables generales y renombrar) ####
Dane_2019 <- mutate(Dane_2019, "Familia" = paste(Dane_2019$ï..DIRECTORIO, "-", Dane_2019$SECUENCIA_P))
Dane_2019 <- dplyr::select(Dane_2019, -1)
Dane_2019 <- dplyr::select(Dane_2019, 1, Familia, everything())
Dane_2019 <- dplyr::select(Dane_2019, id_personal, Familia, DPTO.x, AREA.x, MES.x, P6020, P6040, P6050, P6070, P6090, P6110, P6160, P6170, P6210, P6220, ESC,
P6240, P6280, P6290, P6310, P6260, P6320, P6340, P6350, P6430, P6440, P6450, P6460, P6424S3, P6426, P6480, P9440, P6500,
P6510, P6510S1, P6510S2, P6630S1, P6630S1A1, P6765, P6772, P6775, P6750, P6780, P1800, P1800S1, P1802, P1879, P6800, P6870,
P6880, P6920, P9450, P7020, P760, P7026, P7028, P7100,P7120, P7240,
OFICIO, INGLABO, P7250, P7280, P7310, P7350, P7360 ,P7260, OFICIO2, P7430, P7458,P1884, P1807, P7495, P7505,
P1661S4, P1661S4A1, P1661S4A2,P753S3, P753, P756S3,P755, fex_c_2011.x, P6585S1A1, P6585S1A2, P6585S2A1, P6585S2A2,
P6585S3A1, P6585S3A2, P6585S4A1, P6585S4A2, P6545S1, P6545S2, P6580S1, P6580S2, P7070, P7422S1, P7510S3A1,RAMA2D, RAMA2D_D)
Dane_2019 <- dplyr::rename(Dane_2019, Identificacion=id_personal, Departamento=DPTO.x, Area=AREA.x, Mes=MES.x, "Anios.de.escolaridad" = ESC, "Genero"=P6020,
Edad=P6040, Parentesco=P6050, "Estado.civil" = P6070, "P6090 Cuenta con seguridad social en salud" = P6090)
Dane_2019 <- Dane_2019%>%dplyr::rename("P6110 Quien paga por la salud?" = P6110,  "P6160 Sabe leer y escribir?" = P6160, "P6170 Asiste a una entidad educativa?" =P6170,
"Nivel.educativo.alcanzado" = P6210, "P6220 Titulo o diploma de mayor nivel" = P6220, "P6290 Que ha hecho para conseguir trabajo" = P6290, "P6280 Ha intentado conseguir trabajo en este mes?" = P6280,
"P6240 Que fue lo que mas hizo la semana pasada?" = P6240, "P6310 Por que no hizo diligencias para trabajar?" = P6310, "P6260 Aunque no trabajó la semana pasada, tuvo ingresos?" = P6260,
"P6320 El ultimo año ha trabajado por lo menos 2 semanas?" = P6320, "P6340 En el ultimo año ha buscado trabajado?" = P6340, "P6350 Cuantos meses lleva sin buscar trabajo?" = P6350, "P6440 Como -Asalariado-, cuenta con algún tipo de contrato?" = P6440, "P6500 Cuanto ganó el ultimo mes?" =P6500,
"P6765 Que forma de trabajo -independiente- realizó?" =P6765, "P6750 Ganancia neta por honorarios o negocio" =P6750, "P1800 Tiene empleado o personas que lo ayuden?" =P1800, "P6800 Cuantas horas a la semana trabaja?" = P6800,
"P6870 Numero de personas en la empresa o negocio donde labora" = P6870, "P6880 Donde realiza su trabajo?" =P6880,
"P6920 Cotiza a pension?" =P6920,"P7020 Tuvo otro trabajo antes del actual?" =P7020, "P760 Meses desempleado antes de conseguir trabajo?" =P760, "P7026 Tiempo en empleo anterior (meses)"=P7026,"P7028 En su empleo anterior usted era?"=P7028,
"P7100 Horas adicionales que puede trabajar en la semana"=P7100,"P7120 Disponible para trabajar mas horas a la semana?"=P7120, "P7240 Si no tiene empleo de donde obtendria los recursos?"=P7240,
"P6430 En este trabajo usted es:"=P6430, "Rama de actividad de la empresa donde labora(2digitos)"=RAMA2D, "Ingresos laborales"=INGLABO, "P7250 Semanas que lleva -Desocupado- buscando trabajo, o que estuvo buscando"=P7250,
"P7310 Buscando trabajo por primera vez?"=P7310, "P7350.En.su.ultimo.trabajo.era"=P7350, "P7260 Cuantas horas a la semana podria trabajar?"=P7260,"Rama de la actividad que realiza la ultima empresa donde laboró (2 digitos)?"=RAMA2D_D, "P7430 Es -Inactivo- pero, ha trabajado alguna vez?"=P7430,
"OFICIO codigo de su oficio actual"=OFICIO, "OFICIO2 Codigo del ultimo oficio que realizó"=OFICIO2, "P1884 Cuantas horas a la semana puede trabajar?"=P1884, "P1807 -inactivo-, Salario minimo que aceptaria"=P1807,
"P7495 Recibio pagos por pensiones o arriendos?"=P7495, "P7505 Recibio dinero de otras persons o instituciones?"=P7505,"P1661S4 Recibio ayuda de entidades diferentes al gobierno?"=P1661S4,
"P1661S4A1 Cual entidad no gubernamental?"=P1661S4A1, "P1661S4A2 Monto recibido"=P1661S4A2, "P7360 Numero de personas en la empresa o negocio donde laboraba" = P7360, "P755 Donde vivia hace 5 años?"=P755,
"P753 Donde vivia hace 12 meses?" = P753, "P753S3 En que pais vivia hace 12 meses?"=P753S3, "Factor.de.expansion"=fex_c_2011.x, "Cuanto recibio por horas extras"=P6510S1)
#CREAMOS LA VARIABLE OCUPACION ( 3 niveles )
Dane_2019$ocupacion[!(is.na(Dane_2019$P6765))] = "No asalariado"
Dane_2019$ocupacion[ Dane_2019$P6440 %in% (1:2) & (is.na(Dane_2019$P6765))] = "Asalariado"
Dane_2019$ocupacion[!(Dane_2019$P6440 %in% (1:2))] = "Desempleado"
describe(Dane_2019$ocupacion) # Aprox el 50% de la población mayor de 12 años es: No asalariada
# 4. Trabajador por cuenta propia
# 5. Patrón o empleador
# 6. Trabajador familiar sin remuneracion
# 7. Trabajador para otros hogares o negocios sin remuneracion
describe(Dane_2019$P7350.En.su.ultimo.trabajo.era)
Dane_2019$ocupacion_antes[!(Dane_2019$P6440 %in% (1:2)) & (!(Dane_2019$P7350.En.su.ultimo.trabajo.era %in% (4:7)))] = "No asalariado"
Dane_2019$ocupacion_antes[!(Dane_2019$P6440 %in% (1:2)) & (!(Dane_2019$P7350.En.su.ultimo.trabajo.era %in% c(1,2,3,8,9)))] = "Asalariado"
Dane_2019$ocupacion_antes[is.na(Dane_2019$ocupacion_antes)] = "Ocupados"
1692/(1692+1033) # Aprox el 62% de los desempleados el mes anterior fueron: No asalariadados
# Observamos la frecuencia de ocupación en la base de datos
describe(Dane$ocupacion)
# Miramos el estado de las variables
df_status(Dane)
# Miramos el estado de las variables
df_status(Dane)
# Filtramos y observamos cuantos no reportaron ingresos
prueba <- Dane %>% filter(ocupacion=="Asalariado")
sum(is.na(prueba$P6500.Cuanto.ganó.el.ultimo.mes.))
# Observamos la frecuencia de ocupación en la base de datos
describe(Dane$ocupacion)
# Observamos los valores outliers del ingreso sin subsidios
describe(prueba$P6500.Cuanto.ganó.el.ultimo.mes.)
prueba %>% ggplot(aes(x=ocupacion, y=P6500.Cuanto.ganó.el.ultimo.mes.)) + geom_boxplot()+
ggtitle("Ingresos en el ultimo mes para Asalariados")+
xlab("")+ylab("Monto $") + theme_bw()
# Observamos los valores outliers de los ingresos de subsidios
describe(prueba$P6585S1A1)
describe(prueba$P6585S2A1)
describe(prueba$P6585S3A1)
describe(prueba$P6580S1)
prueba %>% ggplot(aes(x=ocupacion, y=P6585S2A1)) + geom_boxplot()+
ggtitle("Subsidio de transporte")+
xlab("")+ylab("Monto $") + theme_bw()
# Observamos los valores outliers del ingreso
prueba2 %>% ggplot(aes(x=ocupacion, y=P6750.Ganancia.neta.por.honorarios.o.negocio)) + geom_boxplot()+
ggtitle("Ingresos en el ultimo mes para No asalariados")+
xlab("")+ylab("Monto $") + theme_bw()
# Observamos los valores outliers del ingreso
prueba3 %>% ggplot(aes(x=ocupacion, y=P7422S1)) + geom_boxplot() + ggtitle("Ingresos en el ultimo mes para desempleados")+
xlab("")+ylab("Monto $") + theme_bw()
describe(prueba3$P7422S1)
ggplot(Dane, aes(x=ocupacion, y=P7070, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos por actividades secundarias")+xlab("")+ ylab("Monto $") + theme_bw()
ggplot(Dane, aes(x=ocupacion, y=P7510S3A1, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos por entidades nacionales o internacionales")+
xlab("")+ ylab("Monto $") + theme_bw()
describe(Dane$P7070)
df_status(Dane_paramodelos2)
describe(Dane_paramodelos3$Ingresos_total)
ggplot(Dane_paramodelos3, aes(x=ocupacion, y=Ingresos_total, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos totales por sector de población")+
xlab("")+ ylab("Monto $") + theme_bw()
# A manera de ejemplo, nos quedamos solo con los que ganen menos de 3 millones
Dane_paramodelos3 %>% filter(Ingresos_total<=3000000) %>% ggplot(aes(x=ocupacion, y=Ingresos_total, fill=ocupacion)) + geom_boxplot() +
ggtitle("Ingresos totales por sector de población")+
xlab("")+ ylab("Monto $") + theme_bw()
21098 - Dane_paramodelos3 %>% filter(Ingresos_total<=3000000) %>% nrow()  #Solo 123 ganan mas de 3 millones
Año <- c("2019", "2020")
variación_IPC <- c(0.038, 0.0362)
índice <- c(0, 100)
tabla_inf <- as_tibble(cbind(Año, variación_IPC, índice))
tabla_inf$variación_IPC <-  as.numeric(tabla_inf$variación_IPC)
tabla_inf$índice <-  as.numeric(tabla_inf$índice)
tabla_inf
tabla_inf$índice[1] <- tabla_inf$índice[2]/(1+tabla_inf$variación_IPC[1])
tabla_inf
